name: Build e Deploy com Skaffold e GHCR

on:
  push:
    branches: [release/v2.0.0]

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}
      TAG: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login GHCR
        run: |
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Build e Push das Imagens
        run: |
          docker build -t $REPO/email-provider-api:$TAG ./emailProvider
          docker build -t $REPO/email-provider-publisher-api:$TAG ./publisher
          docker build -t $REPO/email-provider-kafka-exporter:$TAG ./kafkaExporter
          docker push $REPO/email-provider-api:$TAG
          docker push $REPO/email-provider-publisher-api:$TAG
          docker push $REPO/email-provider-kafka-exporter:$TAG

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Install k3d
        run: |
          curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash

      - name: Install Skaffold
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
          chmod +x skaffold
          sudo mv skaffold /usr/local/bin/

      - name: Cluster create with k3d
        run: |
          k3d cluster create cluster-app --agents 2 --k3s-arg "--disable=traefik@server:*" --port "8080:80@loadbalancer" --port "8443:443@loadbalancer" --wait
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.9.6/deploy/static/provider/cloud/deploy.yaml

      - name: Deploy kafka
        run: |
          skaffold run -f ./k8s/kafka/skaffold.yaml

      - name: Deploy com Skaffold
        run: |
          skaffold run \
            --default-repo=ghcr.io/${{ github.repository_owner }} \
            --digest-source-tag=$TAG
